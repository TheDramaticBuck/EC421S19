group_by(model) %>%
summarize(Mean = mean(coef) %>% round(3), "Std. Dev." = sd(coef) %>% round(3)) %>%
kable()
relevel()
?relevel()
?fct_recode
?dplyr::recode()
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(`OLS Hom.` = "OLS")) %>%
group_by(Estimator) %>%
summarize(Mean = mean(coef) %>% round(3), "Std. Dev." = sd(coef) %>% round(3)) %>%
kable()
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(`OLS Hom.` = "OLS"))
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(model, `OLS Hom.` = "OLS")) %>%
group_by(Estimator) %>%
summarize(Mean = mean(coef) %>% round(3), "Std. Dev." = sd(coef) %>% round(3)) %>%
kable()
sim_df %>%
filter(model != "OLS Hom.")
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(model, `OLS Hom.` = "OLS"))
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(model, `OLS Hom.` = "OLS"))
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(model, "OLS Hom." = "OLS")) %>%
group_by(Estimator) %>%
summarize(Mean = mean(coef) %>% round(3), "Std. Dev." = sd(coef) %>% round(3)) %>%
kable()
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(model, "OLS Het." = "OLS")) %>%
group_by(Estimator) %>%
summarize(Mean = mean(coef) %>% round(3), "Std. Dev." = sd(coef) %>% round(3)) %>%
kable()
sim_df %>%
filter(model != "OLS Hom.") %>%
mutate(Estimator = recode(model,
"OLS Het." = "OLS",
"WLS F" = "WLS Incorrect",
"WLS T" = "WLS Correct"
)) %>%
group_by(Estimator) %>%
summarize(Mean = mean(coef) %>% round(3), "Std. Dev." = sd(coef) %>% round(3)) %>%
kable()
sim_df
lm(test_score ~ income, test_df) %>% summary
lm(test_score ~ ratio, test_df) %>% summary
lm(test_score ~ log(ratio), test_df) %>% summary
lm(test_score ~ log(ratio/3), test_df) %>% summary
lm(test_score ~ log(ratio^2), test_df) %>% summary
lm(test_score ~ log(ratio^10), test_df) %>% summary
lm(test_score ~ I(ratio^10), test_df) %>% summary
lm(test_score ~ I(ratio^-(10)), test_df) %>% summary
lm(test_score ~ I(ratio^(10)/1e10), test_df) %>% summary
lm(test_score ~ I(ratio^(10)/1e14), test_df) %>% summary
lm(test_score ~ I(ratio^(10)/1e14), head(test_df, 30)) %>% summary
2 * pt(-0.635, df = 28)
2 * pt(-0.635, df = 27)
?summary.lm
?theme
?unit
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
2 + 2
install.packages("gplot2")
install.packages("gplots")
gplots::col2hex("orange")
gplots::col2hex("orange")
xaringan:::inf_mr()
seq(lb, ub, 0.01)
ggplot(data = tibble(x = seq(lb, ub, 0.01), aes(x)) +
geom_area(
stat = "function", fun = dnorm, args = list(mean = ex1, sd = se1),
fill = "orange", alpha = 0.7
)
ggplot(data = tibble(x = seq(lb, ub, 0.01), aes(x)) +
geom_area(
stat = "function", fun = dnorm, args = list(mean = ex1, sd = se1),
fill = "orange", alpha = 0.7
)
ggplot(data = tibble(x = seq(lb, ub, 0.01)), aes(x)) +
geom_area(
stat = "function", fun = dnorm, args = list(mean = ex1, sd = se1),
fill = "orange", alpha = 0.7
)
xaringan:::inf_mr()
lb
ub
mu * 1/(2+1)
gplots::col2hex("orange")
gplots::col2hex(plasma(7, end = 0.9, direction = -1))
gplots::col2hex(plasma(7, end = 0.9, direction = -1))
View(Ecdat::Caschool)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
library(lwgeom)
st_geohash
?CPL_geohash
??CPL_geohash
pchisq(3, 3, lower.tail = T)
pchisq(3, 3, lower.tail = F)
pchisq(3, 3)
pchisq(3, 3, lower.tail = F)
setwd("Dropbox/Websites/edrubin.github.io/")
rmarkdown::render_site()
rmarkdown::render_site("teaching.Rmd")
rmarkdown::render_site("teaching.Rmd")
setwd()
setwd("!")
setwd("~")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
here()
?here
dir()
dir_slides
dir_slides %>% dir
birth_df
birth_df$Month %>% table
birth_df$YearReg %>% class
birth_df$YearReg %>% head
birth_df
birth_df
birth_df %>% tail
birth_df
months
month.name
month.abb
ggplot(data = birth_df %>% filter(Year < 2050),
aes(x = Year, y = factor(as.numeric(Month), labels = month.abb)
) +
geom_tile(color = red_pink) +
theme_pander(base_family = "Fira Sans Book", base_size = 20)
ggplot(data = birth_df %>% filter(Year < 2050),
aes(x = Year, y = factor(as.numeric(Month), labels = month.abb))
) +
geom_tile(color = red_pink) +
theme_pander(base_family = "Fira Sans Book", base_size = 20)
ggplot(data = birth_df %>% filter(Year < 2050),
aes(x = Year, y = factor(as.numeric(Month), labels = month.abb), fill = Births)
) +
geom_tile(color = red_pink) +
theme_pander(base_family = "Fira Sans Book", base_size = 20)
ggplot(data = birth_df %>% filter(Year < 2050),
aes(x = Year, y = factor(as.numeric(Month), labels = month.abb), fill = Births)
) +
geom_tile(color = red_pink) +
theme_pander(base_family = "Fira Sans Book", base_size = 20) +
scale_fill_viridis(option = "magma")
months.Date()
?theme
?unit
dir()
days_df
days_lon <- gather(days_df, year, n_days, -Month)
days_lon <- janitor::clean_names(days_lon)
install.packages('janitor')
days_lon <- gather(days_df, year, n_days, -Month)
days_lon <- janitor::clean_names(days_lon)
days_lon$year <- as.integer(days_lon$year)
days_lon
clean_names(birth_df)
janitor::clean_names(birth_df)
xaringan:::inf_mr()
birth_df
days_lon
birth_df <- left_join(
x = birth_df,
y = days_lon,
by = c("year", "month")
)
birht_df
birht_df
birth_df
birth_df
?theme
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
mobility
fake_data <- data.frame(x = 1:100, y = 1:100)
xaringan:::inf_mr()
mobility_df
xaringan:::inf_mr()
reg_2h %>% summary(robust = T)
lm_2c %>% summary
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
?arima.sim()
ar1_p
warnings()
u <- lapply(X = 1:T, FUN = function(x) {
if (x == 1) {
rho * start + ar1_p$e[x]
} else {
rho * ar1_p$u[x-1] + ar1_p$e[x]
}
}) %>% unlist()
u
ar1_p
u
u
ar1_p
u
u %>% length
ar1_p
ar1_p$u
u
u %>% length()
ar1_p$u <- u
ar1_p
ar1_p
rm(rr1_p)
rm(ar1_p)
arp_df
arp_df
arp_df
warnings()
T <- 1e2
rho <- 0.8
set.seed(1234)
start <- rnorm(1)
arp_df <- tibble(
t = 1:T,
e = rnorm(T)
)
arp_df
u <- lapply(X = 1:T, FUN = function(x) {
if (x == 1) {
u_x <- rho * start + arp_df$e[x]
} else {
u_x <- rho * arp_df$u[x-1] + arp_df$e[x]
}
return(u_x)
}) %>% unlist()
warnings()
for (x in 1:T) print(x)
ar_df
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
b2
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
rm(list = ls())
sim_df
sim_df
sim_df
sim_df
sim_df
reg_resid %>% summary
tidy(reg_resid)
?lag
reg_ar3
reg_ar3 %>% summary
reg_ar3
summary(reg_ar3)$r.squared
ar_df
birth_df
ls()
xaringan:::inf_mr()
pf(1.6667, df1 = 99, df2 = 99)
pf(1.6667, df1 = 99, df2 = 99, lower.tail = F)
1 - pf(1.6667, df1 = 99, df2 = 99)
pf(1.6667, df1 = 99, df2 = 99, lower.tail = F)
pf(1.6667, df1 = 98, df2 = 98, lower.tail = F)
pf(1.666666666667, df1 = 98, df2 = 98, lower.tail = F)
pf(1.7, df1 = 98, df2 = 98, lower.tail = F)
pf(1.67, df1 = 98, df2 = 98, lower.tail = F)
log(exp(3))
library(dplyr)
starwars
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
pt(2.4, 100, lower.tail = F) * 2
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
birth_df
birth_df
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
?here
xaringan:::inf_mr()
xaringan:::inf_mr()
lm(midterm ~ ps1, grades_df) %>% summary
lm(midterm ~ ps1, grades_df %>% filter(ps1 > 50)) %>% summary
readRDS("sim.rds")
test <- arima.sim(model = list(ar = 0.9), n = 100)
test
test <- arima.sim(model = list(ar = 0.9), n = 100) %>% unlist()
test
test <- arima.sim(model = list(ar = 0.9), n = 100) %>% unclass
test
test <- arima.sim(model = list(ar = 0.9), n = 100) %>% as.numeric
test
head(1:10, -1)
tail(1:10, -1)
cor(tail(test, -1), lag(test))
lag(test)
cor(tail(test, -1), tail(lag(test), -1))
getwd()
getwd()
warnings()
getwd()
setwd("~/Dropbox/UO/Teaching/EC421W19/LectureNotes/08Autocorrelation/")
dir()
tmp <- readRDS("sim.rds")
tmp %>% head
readRDS("sim.rds") %>% filter(term == "lag(y2)") %>% select(estimate)
readRDS("sim.rds") %>% filter(term == "lag(y2)") %>% select(estimate) %>% mean
readRDS("sim.rds") %>% filter(term == "lag(y2)") %>% select(estimate) %>% mean(na.rm = T)
readRDS("sim.rds") %>% filter(term == "lag(y2)") %>% select(estimate) %>% unlist %>% mean(na.rm = T)
ls()
xaringan:::inf_mr()
xaringan:::inf_mr()
panel_df
panel_df <- read_csv("ukcpr.csv") %>%
clean_names()
panel_df %>% head
View(panel_df)
panel_df <- read_csv("ukcpr.csv") %>%
clean_names() %>%
group_by(state_name, year) %>%
transmute(
state = state_name,
year,
unemp_rate = unemployment_rate,
gsp_pc = (gross_state_product * 1e6 / population) %>% round(0),
min_wage = max(federal_minimum_wage, state_minimum_wage)
)
panel_df <- read_csv("ukcpr.csv") %>%
clean_names() %>%
group_by(state_name, year) %>%
transmute(
unemp_rate = unemployment_rate,
gsp_pc = (gross_state_product * 1e6 / population) %>% round(0),
min_wage = max(federal_minimum_wage, state_minimum_wage)
)
panel_df
names(panel_df)
panel_df <- read_csv("ukcpr.csv") %>%
clean_names()
names(panel_df)
xaringan:::inf_mr()
panel_df
xaringan:::inf_mr()
panel_df
panel_df %>%
filter(state %in% c("CA", "OR", "WA")) %>%
filter(year %in% c(1990, 2000, 2010)) %>%
select(state, year, poverty_rate, min_wage)
xaringan:::inf_mr()
panel_df
felm(unemp_rate ~ min_wage, data = panel_df)
felm(unemp_rate ~ min_wage, data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage), data = panel_df) %>% summary()
felm(log(unemp_rate) ~ min_wage, data = panel_df) %>% summary()
felm(unemp_rate ~ log(min_wage), data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage), data = panel_df) %>% summary()
felm(unemp_rate ~ log(min_wage), data = panel_df) %>% summary()
felm(unemp_rate ~ min_wage, data = panel_df) %>% summary()
summary(panel_df$unemp_rate)
felm(unemp_rate ~ min_wage, data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage), data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage) | state + year, data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage) | state, data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage) | year, data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage) | year + year, data = panel_df) %>% summary()
felm(log(unemp_rate) ~ log(min_wage) | year + state, data = panel_df) %>% summary()
felm(diff(log(unemp_rate)) ~ log(min_wage) | year + state, data = panel_df) %>% summary()
felm(diff(log(unemp_rate)) ~ diff(log(min_wage)) | year + state, data = panel_df) %>% summary()
felm(diff(log(unemp_rate)) ~ diff(log(min_wage)) | head(year,-1) + head(state,-1), data = panel_df) %>% summary()
felm(diff(unemp_rate) ~ log(min_wage) | head(year,-1) + head(state,-1), data = panel_df) %>% summary()
tmp <- panel_df %>% mutate(diff_mw = diff(minimum_wage), diff_ue = diff(unemp_rate))
tmp <- panel_df %>% mutate(diff_mw = diff(min_wage), diff_ue = diff(unemp_rate))
tmp <- panel_df %>% mutate(diff_mw = min_wage-lag(min_wage), diff_ue = unemp_rate- lag(unemp_rate))
tmp
felm(unemp_rate ~ min_wage | year + state, data = tmp) %>% summary()
felm(diff_ue ~ diff_mw | year + state, data = tmp) %>% summary()
tmp <- panel_df %>% mutate(diff_lmw = log(min_wage)-lag(log(min_wage)), diff_lue = log(unemp_rate)-lag(log(unemp_rate)))
tmp
felm(log(unemp_rate) ~ log(min_wage) | year + state, data = tmp) %>% summary()
felm(log(unemp_rate) ~ log(min_wage), data = tmp) %>% summary()
felm(diff_lue ~ diff_lmw, data = tmp) %>% summary()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
rnorm(1)
rnorm(10)
rnorm(100)
rnorm(3)
rnorm(5)
set.seed(12345); rnorm(5)
set.seed(12345)
rnorm(5)
c()
c(1, 2, 3, 4)
c()
set.seed(123)
v <- rnorm(1)
v
v
v[1] + rnorm(1)
rnorm()
rnorm(1)
rnorm(100)
v <- rnorm(1)
set.seed(123)
v <- rnorm(1)
v
v[1] + rnorm(1)
v[1] + rnorm(1)
v[1] + rnorm(1)
v[1] + rnorm(1)
v[2] <- v[1] + rnorm(1)
v2
v
set.seed(123)
v <- rnorm(1)
for (t in 2:30) {
v[t] <- v[t-1] + rnorm(1)
}
plot(v)
set.seed(123)
v <- rnorm(1)
for (t in 2:30) {
v[t] <- v[t-1] + rnorm(1)
}
v
set.seed(123)
v <- rnorm(1)
for (t in 2:30) {
v[t] <- v[t-1] + rnorm(1)
}
v
x <- 0
ifelse(x > 1, 3, 1)
if (x > 0 ){
print("A")
} else {
print("B")
}
?replicate
replicate(n = 3, expr = "A")
replicate(n = 3, expr = "rnorm(3")
replicate(n = 3, expr = rnorm(3))
replicate(n = 3, expr = rnorm(10))
replicate(n = 3, expr = your_function(123))
set.seed(1)
set.seed(2)
?set.seed
library(dplyr)
tmp <- data.frame(x = c(1,1,1,2,2,2,3), t1 = c(NA, 1, 2, NA, 3, 4, NA), t2 = c(1, 2, 4, NA, 3, 4, NA))
tmp
tmp %>% transmute(id = rep(x, each = 2))
tmp %>% filter(!is.na(t1)) %>% transmute(id = x, type = 1, date = t1)
tmp %>% filter(!is.na(t2)) %>% transmute(id = x, type = 1, date = t2)
tmp %>% filter_(!is.na("t1")) %>% transmute(id = x, type = 1, date = t1)
tmp %>% filter_(!is.na(t1)) %>% transmute(id = x, type = 1, date = t1)
tmp %>% filter_(!is.na("t1")) %>% transmute(id = x, type = 1, date = t1)
tmp
tmp %>% filter_(!is.na("t1"))
?filter_
?filter_
vignette("programming")
var <- "t1"; tmp %>% filter_(!is.na(var))
var <- "t1"; tmp %>% filter_(var == 1)
var <- quo(t1); tmp %>% filter_(var == 1)
quo(a)
quo(t1)
var
var <- quo(t1); tmp %>% quo(filter_(!!var == 1))
quo(filter_(!!var == 1))
quo(filter(!!var == 1))
quo(filter(tmp, !!var == 1))
filter(tmp, !!var == 1)
tmp
tmp
filter(tmp, !!var == 1)
var
vignette("programming")
pf(2.5, 99, 1)
pf(2.5, 99, 100)
pf(2.5, 1, 100, lower.tail = F)
pf(3.4, 1, 100, lower.tail = F)
pf(3.4, 1, 9, lower.tail = F)
pf(3.7, 1, 99, lower.tail = F)
pf(3.8, 1, 99, lower.tail = F)
pf(3.98, 1, 99, lower.tail = F)
