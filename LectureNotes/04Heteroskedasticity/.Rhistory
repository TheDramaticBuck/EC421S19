ylab("Count") +
ggtitle("Correlation") +
# scale_fill_manual(
#   "Free?",
#   labels = c("True", "False"),
#   values = c(red_pink, "darkslategray")
# ) +
theme_pander(base_size = 17) +
theme(legend.position = "bottom")
xaringan:::inf_mr()
getwd()
dir()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
lm(y~x,pop_df)
lm0
?theme
theme_simple
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_pander()
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
theme_simple <- theme_bw() + theme(
axis.line = element_line(color = "grey70", size = 2),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
theme_simple <- theme_bw() + theme(
axis.line = element_line(color = "grey70", size = 2),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
ggplot(data = pop_df, aes(x = x, y = y)) +
geom_point(size = 5, color = "darkslategray", alpha = 0.9) +
theme_simple
line
lo
l0
lm0
xaringan:::inf_mr()
d6 <- tibble(x = seq(-5, 5, 0.01), y = dt(x, df = 28)) %>%
rbind(., tibble(x = seq(5, -5, -0.01), y = 0))
ggplot() +
geom_polygon(data = d6, aes(x, y), fill = red_pink, alpha = 0.9) +
geom_polygon(data = d6, aes(x, y), fill = "darkslategray", alpha = 0.8) +
geom_hline(yintercept = 0, color = "black") +
geom_vline(xintercept = 0, size = 1, linetype = "dashed") +
# scale_x_continuous(breaks = 0, labels = TeX("$\\beta$")) +
theme_simple +
theme(axis.text.x = element_text(size = 20))
ggplot() +
geom_polygon(data = d6, aes(x, y), fill = "grey90") +
geom_polygon(data = d6 %>% filter(x <= qt(.025, 28)), aes(x, y), fill = red_pink) +
geom_hline(yintercept = 0, color = "black") +
# geom_vline(xintercept = 0, size = 1, linetype = "dashed") +
# scale_x_continuous(breaks = 0, labels = TeX("$\\beta$")) +
theme_simple +
theme(axis.text.x = element_text(size = 20))
d6 <- tibble(x = seq(-4, 4, 0.01), y = dt(x, df = 28)) %>%
rbind(., tibble(x = seq(4, -4, -0.01), y = 0))
ggplot() +
geom_polygon(data = d6, aes(x, y), fill = "grey85") +
geom_polygon(data = d6 %>% filter(x <= qt(.025, 28)), aes(x, y), fill = red_pink) +
geom_hline(yintercept = 0, color = "black") +
# geom_vline(xintercept = 0, size = 1, linetype = "dashed") +
# scale_x_continuous(breaks = 0, labels = TeX("$\\beta$")) +
theme_simple +
theme(axis.text.x = element_text(size = 20))
xaringan:::inf_mr()
0.567 - 1.98 * 0.0793
tidy(the_reg)
sim_df
sim_df
ggplot(data = sim_df %>% filter(term == "x") %>% arrange(estimate)) +
geom_pointrange(aes(
ymin = estimate - std.error * qt(.025, 28),
ymax = estimate - std.error * qt(.025, 28)
)) +
theme_empty
ggplot(data = sim_df %>% filter(term == "x") %>% arrange(estimate) %>% mutate(x = 1:1e4)) +
geom_pointrange(aes(
x = x, y = estimate,
ymin = estimate - std.error * qt(.025, 28),
ymax = estimate - std.error * qt(.025, 28)
)) +
theme_empty
sim_df %>% filter(term == "x") %>% arrange(estimate) %>% mutate(x = 1:1e4
)
ggplot(data = sim_df %>% filter(term == "x") %>% arrange(estimate) %>% mutate(x = 1:1e4)) +
geom_pointrange(aes(
x = x, y = estimate,
ymin = estimate - std.error * qt(.025, 28),
ymax = estimate - std.error * qt(.025, 28)
)) +
theme_simple
ggplot(data = sim_df %>% filter(term == "x") %>% arrange(estimate) %>% mutate(x = 1:1e4)) +
geom_pointrange(aes(
x = x, y = estimate,
ymin = estimate - std.error * qt(.025, 28),
ymax = estimate + std.error * qt(.025, 28)
)) +
theme_empty
ggplot(data = sim_df %>% filter(term == "x") %>% arrange(std.error) %>% mutate(x = 1:1e4)) +
geom_pointrange(aes(
x = x, y = estimate,
ymin = estimate - std.error * qt(.025, 28),
ymax = estimate + std.error * qt(.025, 28)
)) +
ggplot(data = sim_df %>% filter(term == "x") %>% arrange(std.error) %>% mutate(x = 1:1e4)) +
geom_pointrange(aes(
x = x, y = estimate,
ymin = estimate - std.error * qt(.025, 28),
ymax = estimate + std.error * qt(.025, 28)
)) +
theme_empty
sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.025, 28),
ub = estimate + std.error * qt(.025, 28)
)
lm0
lm0$coefficients[2]
sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.025, 28),
ub = estimate + std.error * qt(.025, 28),
ci_contains = between(lm0$coefficients[2], lb, ub)
)
sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.025, 28),
ub = estimate + std.error * qt(.025, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub)
)
sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub)
)
sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub)
) %>% summary
9774 / 1e4
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub)
) %>% arrange(ci_contains, estimate)
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub)
) %>% arrange(ci_contains, estimate) %>%
mutate(x = 1:1e4)
ggplot(data = ci_df) +
geom_pointrange(aes(x = x, y = estimate, ymin = lb, ymax = ub, color = ci_contains)) +
theme_empty
ggplot(data = ci_df) +
geom_pointrange(aes(x = x, y = estimate, ymin = lb, ymax = ub, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
theme_empty
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub)
) %>% arrange(ci_contains, estimate) %>%
mutate(x = 1:1e4)
# Plot
ggplot(data = ci_df) +
geom_pointrange(aes(x = x, y = estimate, ymin = lb, ymax = ub, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
theme_empty +
theme(axis.text.y = element_text(size = 14))
# Create confidence intervals for b1
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + ci_below
) %>% arrange(ci_group, lb) %>%
mutate(x = 1:1e4)
# Plot
ggplot(data = ci_df) +
geom_pointrange(aes(x = x, y = estimate, ymin = lb, ymax = ub, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
theme_simple +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14)
)
ci_group
ci_df
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + (!ci_below)
) %>% arrange(ci_group, estimate) %>%
mutate(x = 1:1e4)
# Plot
ggplot(data = ci_df) +
geom_pointrange(aes(x = x, y = estimate, ymin = lb, ymax = ub, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
theme_simple +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14)
)
ggplot(data = ci_df) +
geom_segment(aes(y = lb, yend = ub, x = x, xend = x, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
theme_simple +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14)
)
ci_df
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + (!ci_below)
) %>% arrange(ci_group, std.error) %>%
mutate(x = 1:1e4)
# Plot
ggplot(data = ci_df) +
geom_segment(aes(y = lb, yend = ub, x = x, xend = x, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
theme_simple +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14)
)
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 27),
ub = estimate + std.error * qt(.975, 27),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + (!ci_below)
) %>% arrange(ci_group, estimate) %>%
mutate(x = 1:1e4)
ci_df$ci_contains %>% mean
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.95, 28),
ub = estimate + std.error * qt(.95, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + (!ci_below)
) %>% arrange(ci_group, estimate) %>%
mutate(x = 1:1e4)
ci_df$ci_contains %>% mean
xaringan:::inf_mr()
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (0.5 >= lb) & (0.5 <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + (!ci_below)
) %>% arrange(ci_group, estimate) %>%
mutate(x = 1:1e4)
ci_df$ci_contains %>% multiply_by(100) %>% mean() %>% round(1)
ci_df$ci_contains %>% multiply_by(100) %>% mean()
ci_df$ci_contains %>% mean
ci_df$ci_contains
ci_df$ci_contains %>% table
lm(y ~ x, data = pop_df) %>% tidy()
sim_df
t_sim <- sim_df %>%
filter(estimate = x) %>%
mutate(
t_stat = (estimate - lm0$coefficients[2]) / std.error,
reject = abs(t_stat) > abs(qt(0.975, 28))
)
t_sim <- sim_df %>%
filter(estimate = x) %>%
mutate(
t_stat = (estimate - lm0$coefficients[2]) / std.error,
reject = abs(t_stat) > abs(qt(0.975, 28))
)
sim_df
t_sim <- sim_df %>%
filter(estimate == "x") %>%
mutate(
t_stat = (estimate - lm0$coefficients[2]) / std.error,
reject = abs(t_stat) > abs(qt(0.975, 28))
)
ggplot(data = t_sim, aes(x = t_stat)) +
geom_density()
t_df <- sim_df %>%
filter(estimate == "x") %>%
mutate(
t_stat = (estimate - lm0$coefficients[2]) / std.error,
reject = abs(t_stat) > abs(qt(0.975, 28))
)
ggplot(data = t_df, aes(x = t_stat)) +
geom_density()
t_df
sim_df
t_df <- sim_df %>%
filter(term == "x") %>%
mutate(
t_stat = (estimate - lm0$coefficients[2]) / std.error,
reject = abs(t_stat) > abs(qt(0.975, 28))
)
ggplot(data = t_df, aes(x = t_stat)) +
geom_density()
ggplot(data = t_df, aes(x = t_stat, fill = reject)) +
geom_density()
ggplot(data = t_df, aes(x = t_stat)) +
geom_density()
t_df$t %>% summary
t_df %>% summary
t_density <- density(t_df$t, from = -5, to = 4)
t_density <- density(t_df$t_stat, from = -5, to = 4)
t_desity %>% head
t_density %>% head
t_density %$% data.frame(x = x, y = y)
t_density <- density(t_df$t_stat, from = -5, to = 4) %$%
data.frame(x = x, y = y) %>%
mutate(area = abs(x) > abs(qt(0.975, 28))
t_density <- density(t_df$t_stat, from = -5, to = 4) %$%
data.frame(x = x, y = y) %>%
mutate(area = abs(x) > abs(qt(0.975, 28)))
t_density %>% Head
t_density %>% head
t_density <- density(t_df$t_stat, from = -5, to = 4) %$%
data.frame(x = x, y = y) %>%
mutate(area = abs(x) > abs(qt(0.975, 28)))
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y, fill = area)) +
geom_ribbon()
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_ribbon()
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_ribbon() +
theme_simple
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_ribbon() +
geom_vline(xintercept = qt(c(0.025, 0.975), df = 28), color = red_pink) +
theme_simple
t_df$reject %>% mean
xaringan:::inf_mr()
xaringan:::inf_mr()
?sample()
n <- 1e2
set.seed(1234)
gen_df <- tibble(
x1 = runif(n = n, min = 0.5, max = 3.5),
x2 = sample(x = c(0,2), size = n, replace = T),
u  = rnorm(n = n, mean = 0, sd = 1)
)
n <- 1e2
set.seed(1234)
gen_df <- tibble(
x1 = runif(n = n, min = 0.5, max = 3.5),
x2 = sample(x = c(0,2), size = n, replace = T),
u  = rnorm(n = n, mean = 0, sd = 1),
y  = 1 + x1 + x2 + u
)
gen_df
?theme
xaringan:::inf_mr()
?scale_color_discrete()
?scale_color_manual()
ggplot(data = gen_df, aes(y = y, x = x1, color = x2)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
theme_empty +
scale_color_manual(
TeX("x_2"),
labels = c("A", "B"),
values = c("darkslategrey", "grey85")
) +
theme(legend.position = "bottom")
?scale_shape_manual
gen_df %>% summary
gen_df %>% summary
ggplot(data = gen_df, aes(y = y, x = x1, color = x2, shape = x2)) +
geom_point(size = 3) +
# geom_hline(yintercept = 0) +
# geom_vline(xintercept = 0) +
ylim(c(-4, 8)) +
theme_axes +
scale_color_manual(
expression(x[2]),
values = c("darkslategrey", red_pink),
labels = c("A", "B")
) +
scale_shape_manual(
expression(x[2]),
values = c(1, 19),
labels = c("A", "B")
) +
theme(legend.position = "bottom")
theme_axes
add_axes <-
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
add_axes <-
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
?annotate
gen_df %>% summary
warngings()
warnings()
gen_df %>% group_by(x2) %>% summarize(mean(y))
gen_df %>% group_by(x2) %>% summarize(mean(y)) %>% unlist9)
gen_df %>% group_by(x2) %>% summarize(mean(y)) %>% unlist()
gen_df %>% group_by(x2) %>% summarize(mean(y)) %>% unlist() %>% extract(3:4)
mean_b
mean_a
mean_a <- filter(gen_df, x2 == F)$y %>% mean()
mean_b <- filter(gen_df, x2 == T)$y %>% mean()
mean_a
mean_b
mean_a <- filter(gen_df, x2 == F)$y %>% mean()
mean_b <- filter(gen_df, x2 == T)$y %>% mean()
gen_df %<>% mutate(y_dm = y - mean_a * (x2 == F) - mean_b * (x2 == T))
gen_df
warnings()
set.seed(1234)
y <- rnorm(1e3)
x <- matrix(data = rnorm(1e6), nrow = 1e3))
x <- matrix(data = rnorm(1e6), nrow = 1e3)
x %>% head
x %>% dim
set.seed(1234)
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(1, x)
set.seed(1234)
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(matrix(data = 1, nrow = 1e4, ncol = 1), x)
lm(y ~ x[,1:3])
lm(y ~ x[,1:3]) %>% summary
lm(y ~ x[,1:3]) %>% summary %>% names
lm(y ~ x[,1:3]) %>% summary %$% r.squared
lappy(1:10, data.frame(x = 1, y = 2))
lalppy(1:10, data.frame(x = 1, y = 2))
lapply(1:10, data.frame(x = 1, y = 2))
lapply(1:10, function (x) data.frame(x = 1, y = 2))
lapply(1:10, function (x) data.frame(x = 1, y = 2)) %>% bind_rows
r_df <- mclapply(X = 1:1e3, mc.cores = 4, FUN = function(x) {
tmp_reg <- lm(y ~ x[,1:3]) %>% summary()
data.frame(
k = x + 1,
r2 = tmp_reg %$% r.squared,
r2_adj = tmp_reg %$% adj.r.squared
)
})
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(matrix(data = 1, nrow = 1e4, ncol = 1), x)
y
warnings()
set.seed(1234)
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(matrix(data = 1, nrow = 1e4, ncol = 1), x)
xaringan:::inf_mr()
